FIRRTL version 3.3.0
circuit BranchUnit :%[[
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~BranchUnit|BranchUnit",
    "group":"BranchUnit"
  }
]]
  module BranchUnit : @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 9:7]
    input clock : Clock @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 9:7]
    input reset : UInt<1> @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 9:7]
    output io : { flip rs1 : UInt<32>, flip rs2 : UInt<32>, flip pc : UInt<32>, flip imm : SInt<12>, flip branchOp : UInt<3>, flip valid : UInt<1>, taken : UInt<1>, target : UInt<32>, nextPc : UInt<32>, misaligned : UInt<1>} @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 10:14]

    node _targetAddr_T = asSInt(io.pc) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 27:27]
    node _targetAddr_T_1 = add(_targetAddr_T, io.imm) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 27:34]
    node _targetAddr_T_2 = tail(_targetAddr_T_1, 1) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 27:34]
    node _targetAddr_T_3 = asSInt(_targetAddr_T_2) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 27:34]
    node targetAddr = asUInt(_targetAddr_T_3) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 27:44]
    node _io_target_T = and(targetAddr, UInt<32>(0hfffffffc)) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 28:27]
    connect io.target, _io_target_T @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 28:13]
    node _io_misaligned_T = bits(targetAddr, 1, 0) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 31:30]
    node _io_misaligned_T_1 = neq(_io_misaligned_T, UInt<1>(0h0)) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 31:37]
    connect io.misaligned, _io_misaligned_T_1 @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 31:17]
    node _io_taken_T = eq(io.branchOp, UInt<1>(0h0)) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 34:31]
    node _io_taken_T_1 = eq(io.rs1, io.rs2) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 34:47]
    node _io_taken_T_2 = eq(io.branchOp, UInt<1>(0h1)) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 35:31]
    node _io_taken_T_3 = neq(io.rs1, io.rs2) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 35:47]
    node _io_taken_T_4 = eq(io.branchOp, UInt<3>(0h4)) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 36:31]
    node _io_taken_T_5 = asSInt(io.rs1) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 36:47]
    node _io_taken_T_6 = asSInt(io.rs2) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 36:63]
    node _io_taken_T_7 = lt(_io_taken_T_5, _io_taken_T_6) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 36:54]
    node _io_taken_T_8 = eq(io.branchOp, UInt<3>(0h5)) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 37:31]
    node _io_taken_T_9 = asSInt(io.rs1) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 37:47]
    node _io_taken_T_10 = asSInt(io.rs2) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 37:64]
    node _io_taken_T_11 = geq(_io_taken_T_9, _io_taken_T_10) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 37:54]
    node _io_taken_T_12 = eq(io.branchOp, UInt<3>(0h6)) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 38:31]
    node _io_taken_T_13 = lt(io.rs1, io.rs2) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 38:47]
    node _io_taken_T_14 = eq(io.branchOp, UInt<3>(0h7)) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 39:31]
    node _io_taken_T_15 = geq(io.rs1, io.rs2) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 39:47]
    node _io_taken_T_16 = mux(_io_taken_T_14, _io_taken_T_15, UInt<1>(0h0)) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 39:18]
    node _io_taken_T_17 = mux(_io_taken_T_12, _io_taken_T_13, _io_taken_T_16) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 38:18]
    node _io_taken_T_18 = mux(_io_taken_T_8, _io_taken_T_11, _io_taken_T_17) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 37:18]
    node _io_taken_T_19 = mux(_io_taken_T_4, _io_taken_T_7, _io_taken_T_18) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 36:18]
    node _io_taken_T_20 = mux(_io_taken_T_2, _io_taken_T_3, _io_taken_T_19) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 35:18]
    node _io_taken_T_21 = mux(_io_taken_T, _io_taken_T_1, _io_taken_T_20) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 34:18]
    node _io_taken_T_22 = and(_io_taken_T_21, io.valid) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 40:29]
    node _io_taken_T_23 = eq(io.misaligned, UInt<1>(0h0)) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 40:44]
    node _io_taken_T_24 = and(_io_taken_T_22, _io_taken_T_23) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 40:41]
    connect io.taken, _io_taken_T_24 @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 34:12]
    node _io_nextPc_T = add(io.pc, UInt<3>(0h4)) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 43:47]
    node _io_nextPc_T_1 = tail(_io_nextPc_T, 1) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 43:47]
    node _io_nextPc_T_2 = mux(io.taken, io.target, _io_nextPc_T_1) @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 43:19]
    connect io.nextPc, _io_nextPc_T_2 @[src/main/scala/OctoNyteCore/BranchUnit/BranchUnit.scala 43:13]
